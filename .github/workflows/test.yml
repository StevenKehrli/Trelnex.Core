name: Default Test Workflow

on:
  workflow_call:
    inputs:
      dotnet_version:
        description: 'The version of the .NET SDK; e.g. 9.0.x'
        required: true
        type: string
      project_name:
        description: 'The project name; e.g. Trelnex.Core.Data.Tests'
        required: true
        type: string

jobs:

  # ---------------------------------------------------------------------
  # 1. Test
  # ---------------------------------------------------------------------
  test:

    name: Test
    runs-on: [ ubuntu-latest ]

    steps:

      - name: checkout
        uses: actions/checkout@v4
        with:
          # disable shallow clone
          fetch-depth: 0

      - name: dotnet nuget add source
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name "github" "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet_version }}

      - name: dotnet restore
        run: dotnet restore ${{ inputs.project_name }}/${{ inputs.project_name }}.csproj

      - name: dotnet test
        run: dotnet test ${{ inputs.project_name }}/${{ inputs.project_name }}.csproj --logger html --results-directory "TestResults.${{ inputs.project_name }}"

      - name: upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults.${{ inputs.project_name }}
          path: TestResults.${{ inputs.project_name }}
          retention-days: 14
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
